trigger:
 branches:
   include:
     - main

pool: default

schedules:
- cron: "0 17 * * *"
  displayName: Daily at 5 PM
  always: true
  branches:
      include:
        - main

variables:
 kp_directory: '$(System.DefaultWorkingDirectory)/Env/Dev'
 rg_group: 'kkp-rg'
 

parameters:
- name: Envornment # Required as first property.
  displayName: Env # Human-readable name for the parameter.
  type: string
  default: dev
  values: 
  - dev
  - qa


stages:
  - stage: "infrapipeline"
    displayName: terraform_init 
    jobs: 
    - job: "terraform_init_plan"
      steps:

      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: "$(kp_directory)"
          backendServiceArm: 'CICD'
          backendAzureRmResourceGroupName: "$(rg_group)"
          backendAzureRmStorageAccountName: 'kpstr123'
          backendAzureRmContainerName: 'kpctr'
          backendAzureRmKey: 'kp.tfstate'
      
      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: "$(kp_directory)"
          environmentServiceNameAzureRM: 'CICD'

  - stage: "manualvalidation"
    dependsOn: "infrapipeline"
    pool: server
    jobs:
    - job: "manualvalidation"
      steps:
      - task: ManualValidation@1
        inputs:
          notifyUsers: 'please check and approve'
          onTimeout: 'resume'

  - stage: "terraformapply"
    dependsOn: "manualvalidation"
    displayName: terraformapply
    jobs: 
      - job: "terraformapply"
        steps:
        - task: TerraformTaskV4@4
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: "$(kp_directory)"
            backendServiceArm: 'CICD'
            backendAzureRmResourceGroupName: "$(rg_group)"
            backendAzureRmStorageAccountName: 'kpstr123'
            backendAzureRmContainerName: 'kpctr'
            backendAzureRmKey: 'kp.tfstate'

        - task: TerraformTaskV4@4
          inputs:
            provider: 'azurerm'
            command: 'apply'
            workingDirectory: "$(kp_directory)"
            environmentServiceNameAzureRM: 'CICD'
           
      

